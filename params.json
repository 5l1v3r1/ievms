{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"ievms","body":"Overview\r\n========\r\n\r\nMicrosoft provides virtual machine disk images to facilitate website testing \r\nin multiple versions of IE, regardless of the host operating system. \r\n~~Unfortunately, setting these virtual machines up without Microsoft's VirtualPC\r\ncan be extremely difficult. The ievms scripts aim to facilitate that process using\r\nVirtualBox on Linux or OS X.~~ With a single command, you can have IE6, IE7, IE8,\r\nIE9 and IE10 running in separate virtual machines. \r\n\r\n**NOTE:** As of Feb. 1st, 2013, the [MS images](http://www.modern.ie/virtualization-tools)\r\nare fully compatible with Virtualbox, thanks to the [modern.IE](http://modern.IE)\r\nproject.\r\n\r\n[![Click here to lend your support to ievms and make a donation at pledgie.com!](http://pledgie.com/campaigns/15995.png?skin_name=chrome)](http://pledgie.com/campaigns/15995)\r\n\r\n\r\nRequirements\r\n============\r\n\r\n* VirtualBox (http://virtualbox.org)\r\n* Curl (Ubuntu: `sudo apt-get install curl`)\r\n* Linux Only: unzip (Ubuntu: `sudo apt-get install unzip`)\r\n* Patience\r\n\r\n\r\nInstallation\r\n============\r\n\r\n1. Install VirtualBox (make sure command line utilities are selected and installed).\r\n\r\n2. Download and unpack ievms:\r\n\r\n   * Install IE versions 6, 7, 8, 9 and 10.\r\n\r\n        curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | bash\r\n\r\n   * Install specific IE versions (IE7 and IE9 only for example):\r\n\r\n        curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | IEVMS_VERSIONS=\"7 9\" bash\r\n\r\n3. Launch Virtual Box.\r\n\r\n4. Choose ievms image from Virtual Box.\r\n\r\nThe OVA images are massive and can take hours or tens of minutes to \r\ndownload, depending on the speed of your internet connection. You might want\r\nto start the install and then go catch a movie, or maybe dinner, or both. \r\n\r\n\r\nRecovering from a failed installation\r\n-------------------------------------\r\n\r\nEach version is installed into a subdirectory of `~/.ievms/ova/`. If the installation fails\r\nfor any reason (corrupted download, for instance), delete the version-specific subdirectory\r\nand rerun the install.\r\n\r\nIf nothing else, you can delete `~/.ievms` and rerun the install.\r\n\r\n\r\nSpecifying the install path\r\n---------------------------\r\n\r\nTo specify where the VMs are installed, use the INSTALL_PATH variable:\r\n\r\n    curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | INSTALL_PATH=\"/Path/to/.ievms\" bash\r\n\r\n\r\nPassing additional options to curl\r\n----------------------------------\r\n\r\nThe `curl` command is passed any options present in the `CURL_OPTS` \r\nenvironment variable. For example, you can set a download speed limit:\r\n\r\n    curl -s https://raw.github.com/xdissent/ievms/master/ievms.sh | CURL_OPTS=\"--limit-rate 50k\" bash\r\n\r\n\r\nFeatures\r\n========\r\n\r\nClean Snapshot\r\n--------------\r\n\r\nA snapshot is automatically taken upon install, allowing rollback to the\r\npristine virtual environment configuration. Anything can go wrong in \r\nWindows and rather than having to worry about maintaining a stable VM,\r\nyou can simply revert to the `clean` snapshot to reset your VM to the\r\ninitial state.\r\n\r\n\r\nResuming Downloads\r\n------------------\r\n\r\nIf one of the comically large files fails to download, the `curl` \r\ncommand used will automatically attempt to resume where it left off. \r\n\r\n\r\nLicense\r\n=======\r\n\r\nNone. (To quote Morrissey, \"take it, it's yours\")\r\n","tagline":"Automated installation of the Microsoft IE App Compat virtual machines","google":""}